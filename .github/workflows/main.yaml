name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven

    - name: Delete SonarQube cache
      run: |
        if [ -d $HOME/.sonar ]; then
          rm -rf $HOME/.sonar
        fi

    - name: SonarQube Scan
      run: |
        # Download and unzip SonarScanner 5
        curl -sSL "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.0.2966-linux.zip" -o sonar-scanner.zip
        unzip sonar-scanner.zip -d .
        # Configure SonarScanner properties (adjust as needed)
        echo "sonar.host.url=${{ secrets.SONAR_HOST_URL }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        echo "sonar.projectKey=demo" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        echo "sonar.java.binaries=src/main/java/com/example/helloworld/HelloWorldApplication.java/classes" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties

        # Run SonarScanner and handle errors
        if ./sonar-scanner-5.0.0.2966-linux/bin/sonar-scanner; then
        echo "SonarQube analysis completed successfully."
        else
         echo "SonarQube analysis failed."
         exit 1
        fi


    - name: Change to repository root
      run: cd $GITHUB_WORKSPACE

  
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Save JAR file as artifact
      uses: actions/upload-artifact@v2
      with:
        name: sample-application
        path: target/sample-application.jar
